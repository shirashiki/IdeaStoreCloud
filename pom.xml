<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 	<!--
  	Defines a Spring boot application which will run at Heroku.com
  	 -->
  	<modelVersion>4.0.0</modelVersion>
  	<groupId>com.github.shirashiki.ideastore.cloud</groupId>
  	<artifactId>IdeaStoreSpring</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  	<packaging>jar</packaging>
  	<name>Idea Store Spring Boot Project</name>
  	
  	
	<properties>
	  	<!-- Assigns Java version. This configuration needs to be aligned with
  		system.properties (a file for Heroku) file in the root -->
    	<java.version>1.7</java.version>
    	
	</properties>
  
  	<!-- Spring: Inherit defaults from Spring Boot -->
  	<parent>
		<!-- Your own application should inherit from spring-boot-starter-parent -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.1.5.RELEASE</version>
	</parent>
	<repositories>
        <repository>
          <id>maven2-repository.dev.java.net</id>
          <name>Java.net Repository for Maven</name>
          <url>http://download.java.net/maven/2/</url>
          <layout>default</layout>
        </repository>
  	</repositories>
	
	<dependencies>
	
		<!-- Spring boot -->
	  	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-web</artifactId>
       		<exclusions>
        		<exclusion>
            		<groupId>org.springframework.boot</groupId>
            		<artifactId>spring-boot-starter-tomcat</artifactId>
        		</exclusion>
    		</exclusions>
    	</dependency>
    	
    	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-actuator</artifactId>
    	</dependency>
    	
    	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-aop</artifactId>
    	</dependency>
    	
    	<!-- Spring: Jetty web server, substitutes Tomcat because of Heroku -->
    	<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty </artifactId>
		</dependency>
		
		<!-- Spring Data JPA -->
		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-data-jpa</artifactId>
    	</dependency>
    	
    	<!-- Spring Data REST -->
   		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-data-rest</artifactId>
    	</dependency>
		
		<!-- Square Retrofit, a type-safe REST client for Java and Android.
			This is here because clients will be also in Android -->
   		<dependency>
        	<groupId>com.squareup.retrofit</groupId>
    		<artifactId>retrofit</artifactId>
    		<version>1.6.0</version>
    	</dependency>
		
		<!-- H2 database -->
		<dependency>
    		<groupId>com.h2database</groupId>
    		<artifactId>h2</artifactId>
		</dependency>

		<dependency>
    		<groupId>javax.sql</groupId>
    		<artifactId>jdbc-stdext</artifactId>
    		<version>2.0</version>
		</dependency>

		<dependency>
    		<groupId>junit</groupId>
    		<artifactId>junit</artifactId>
		</dependency>
		
		<dependency>
    		<groupId>commons-io</groupId>
    		<artifactId>commons-io</artifactId>
    		<version>2.4</version>
		</dependency>

		<!-- Google Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>17.0</version>
		</dependency>

		<!-- Spring Boot Test
			This includes jUnit and testing stuff using a Spring Boot application starter -->
   		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-test</artifactId>
    	</dependency>

	</dependencies>
	
	<build>
	    <plugins>
	    	<!-- Spring: enables jar creation -->
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	        </plugin>
	    </plugins>
	</build>
</project>